{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Enterprise Software Architecture Documentation",
  "type": "object",
  "definitions": {
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9]+)?$",
      "description": "Semantic version format"
    },
    "uuid": {
      "type": "string",
      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
    },
    "environment": {
      "type": "string",
      "enum": ["development", "staging", "testing", "production", "sandbox", "integration"]
    },
    "technology": {
      "type": "string",
      "enum": [
        "React", "Angular", "Vue.js", "Node.js", "Express", "FastAPI", "Django", "Flask",
        "Spring Boot", "ASP.NET", "PostgreSQL", "MySQL", "MongoDB", "Redis", "Elasticsearch",
        "Docker", "Kubernetes", "AWS", "Azure", "GCP", "Terraform", "Jenkins", "GitLab CI",
        "Nginx", "Apache", "RabbitMQ", "Kafka", "GraphQL", "REST", "gRPC", "WebSocket"
      ]
    },
    "securityLevel": {
      "type": "string",
      "enum": ["public", "internal", "confidential", "restricted", "top-secret"]
    },
    "priority": {
      "type": "string",
      "enum": ["low", "medium", "high", "critical"]
    }
  },
  "properties": {
    "documentInfo": {
      "type": "object",
      "properties": {
        "title": {"type": "string"},
        "version": {"$ref": "#/definitions/version"},
        "lastUpdated": {"type": "string", "format": "date-time"},
        "author": {"type": "string"},
        "reviewers": {
          "type": "array",
          "items": {"type": "string"}
        }
      },
      "required": ["title", "version", "author"]
    },
    "systems": {
      "type": "object",
      "properties": {
        "frontend": {
          "type": "object",
          "properties": {
            "name": {"type": "string"},
            "description": {"type": "string"},
            "technology": {"$ref": "#/definitions/technology"},
            "version": {"$ref": "#/definitions/version"},
            "components": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "type": {
                    "type": "string",
                    "enum": ["page", "component", "service", "utility", "hook", "store"]
                  },
                  "path": {"type": "string"},
                  "dependencies": {
                    "type": "array",
                    "items": {"type": "string"}
                  },
                  "implementation": {
                    "type": "object",
                    "properties": {
                      "methods": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {"type": "string"},
                            "visibility": {
                              "type": "string",
                              "enum": ["public", "private", "protected"]
                            },
                            "parameters": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {"type": "string"},
                                  "type": {"type": "string"},
                                  "required": {"type": "boolean"},
                                  "defaultValue": {"type": "string"},
                                  "validation": {
                                    "type": "object",
                                    "properties": {
                                      "pattern": {"type": "string"},
                                      "minLength": {"type": "integer"},
                                      "maxLength": {"type": "integer"},
                                      "enum": {
                                        "type": "array",
                                        "items": {"type": "string"}
                                      }
                                    }
                                  }
                                },
                                "required": ["name", "type"]
                              }
                            },
                            "returnType": {"type": "string"}
                          },
                          "required": ["name", "visibility"]
                        }
                      },
                      "state": {
                        "type": "object",
                        "properties": {
                          "variables": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {"type": "string"},
                                "type": {"type": "string"},
                                "initialValue": {"type": "string"},
                                "scope": {
                                  "type": "string",
                                  "enum": ["local", "global", "session", "persistent"]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": ["name", "type"]
              }
            }
          },
          "required": ["name", "technology"]
        },
        "backend": {
          "type": "object",
          "properties": {
            "name": {"type": "string"},
            "architecture": {
              "type": "string",
              "enum": ["monolithic", "microservices", "serverless", "hybrid"]
            },
            "services": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {"$ref": "#/definitions/uuid"},
                  "name": {"type": "string"},
                  "description": {"type": "string"},
                  "technology": {"$ref": "#/definitions/technology"},
                  "port": {"type": "integer", "minimum": 1000, "maximum": 65535},
                  "endpoints": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "path": {"type": "string"},
                        "method": {
                          "type": "string",
                          "enum": ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]
                        },
                        "description": {"type": "string"},
                        "authentication": {
                          "type": "object",
                          "properties": {
                            "required": {"type": "boolean"},
                            "type": {
                              "type": "string",
                              "enum": ["bearer", "basic", "oauth2", "apikey", "jwt"]
                            },
                            "scopes": {
                              "type": "array",
                              "items": {"type": "string"}
                            },
                            "permissions": {
                              "type": "object",
                              "properties": {
                                "roles": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": ["admin", "user", "moderator", "viewer", "editor"]
                                  }
                                },
                                "securityLevel": {"$ref": "#/definitions/securityLevel"},
                                "restrictions": {
                                  "type": "object",
                                  "properties": {
                                    "ipWhitelist": {
                                      "type": "array",
                                      "items": {"type": "string"}
                                    },
                                    "rateLimit": {
                                      "type": "object",
                                      "properties": {
                                        "requests": {"type": "integer"},
                                        "window": {"type": "string"},
                                        "burst": {"type": "integer"}
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "requestSchema": {
                          "type": "object",
                          "properties": {
                            "contentType": {"type": "string"},
                            "schema": {"type": "object"}
                          }
                        },
                        "responseSchema": {
                          "type": "object",
                          "properties": {
                            "statusCodes": {
                              "type": "array",
                              "items": {"type": "integer"}
                            },
                            "schema": {"type": "object"}
                          }
                        }
                      },
                      "required": ["path", "method"]
                    }
                  },
                  "dependencies": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "serviceId": {"$ref": "#/definitions/uuid"},
                        "type": {
                          "type": "string",
                          "enum": ["synchronous", "asynchronous", "event-driven"]
                        },
                        "protocol": {
                          "type": "string",
                          "enum": ["HTTP", "gRPC", "WebSocket", "Message Queue"]
                        }
                      }
                    }
                  }
                },
                "required": ["id", "name", "technology"]
              }
            }
          },
          "required": ["name", "architecture"]
        },
        "database": {
          "type": "object",
          "properties": {
            "instances": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "type": {
                    "type": "string",
                    "enum": ["relational", "document", "key-value", "graph", "time-series"]
                  },
                  "technology": {"$ref": "#/definitions/technology"},
                  "version": {"$ref": "#/definitions/version"},
                  "schemas": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {"type": "string"},
                        "tables": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {"type": "string"},
                              "columns": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {"type": "string"},
                                    "dataType": {"type": "string"},
                                    "nullable": {"type": "boolean"},
                                    "primaryKey": {"type": "boolean"},
                                    "foreignKey": {
                                      "type": "object",
                                      "properties": {
                                        "table": {"type": "string"},
                                        "column": {"type": "string"},
                                        "onDelete": {
                                          "type": "string",
                                          "enum": ["CASCADE", "SET NULL", "RESTRICT", "NO ACTION"]
                                        },
                                        "onUpdate": {
                                          "type": "string",
                                          "enum": ["CASCADE", "SET NULL", "RESTRICT", "NO ACTION"]
                                        }
                                      }
                                    },
                                    "constraints": {
                                      "type": "object",
                                      "properties": {
                                        "unique": {"type": "boolean"},
                                        "check": {"type": "string"},
                                        "default": {"type": "string"},
                                        "validation": {
                                          "type": "object",
                                          "properties": {
                                            "pattern": {"type": "string"},
                                            "minValue": {"type": "number"},
                                            "maxValue": {"type": "number"},
                                            "allowedValues": {
                                              "type": "array",
                                              "items": {"type": "string"}
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": ["name", "dataType"]
                                }
                              },
                              "indexes": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {"type": "string"},
                                    "columns": {
                                      "type": "array",
                                      "items": {"type": "string"}
                                    },
                                    "unique": {"type": "boolean"},
                                    "type": {
                                      "type": "string",
                                      "enum": ["btree", "hash", "gin", "gist"]
                                    }
                                  }
                                }
                              }
                            },
                            "required": ["name", "columns"]
                          }
                        }
                      },
                      "required": ["name"]
                    }
                  }
                },
                "required": ["name", "type", "technology"]
              }
            }
          }
        }
      },
      "required": ["frontend", "backend", "database"]
    },
    "deployment": {
      "type": "object",
      "properties": {
        "environments": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {"$ref": "#/definitions/environment"},
              "infrastructure": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": ["AWS", "Azure", "GCP", "DigitalOcean", "Heroku", "on-premise"]
                  },
                  "region": {"type": "string"},
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": ["compute", "storage", "network", "database", "cache"]
                        },
                        "specifications": {
                          "type": "object",
                          "properties": {
                            "cpu": {"type": "string"},
                            "memory": {"type": "string"},
                            "storage": {"type": "string"},
                            "network": {"type": "string"}
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": ["name"]
          }
        }
      }
    },
    "team": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {"type": "string"},
              "role": {
                "type": "string",
                "enum": ["architect", "developer", "devops", "tester", "manager", "analyst"]
              },
              "responsibilities": {
                "type": "array",
                "items": {"type": "string"}
              },
              "systems": {
                "type": "array",
                "items": {"type": "string"}
              }
            },
            "required": ["name", "role"]
          }
        }
      }
    }
  },
  "required": ["documentInfo", "systems"]
}
